name: 1weekPDCA_Build&Test

on:
  push:
    branches:
      - main
      - develop
      - feature/**
    paths-ignore:
      - Docs/**
      - README.md
      - LICENSE
      - Rambafile
  pull_request:
    branches:
      - develop
    paths-ignore:
      - Docs/**
      - README.md
      - LICENSE
      - Rambafile

env:
  DEVELOPER_DIR: /Applications/Xcode_11.6.app

jobs:
  test:
    runs-on: macOS-latest
    env:
      MINT_PATH: mint/lib
      MINT_LINK_PATH: mint/bin

    steps:
    # チェックアウト
    - uses: actions/checkout@v2

    # Xcodeの一覧出力
    - name: Show Xcode list
      run: ls /Applications | grep 'Xcode'

    # Xcodeのバージョン出力
    - name: Show Xcode version
      run: xcodebuild -version

    # Gemsのキャッシュ
    - name: Cache Gems
      uses: actions/cache@v2
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gems-

    # Gemsのインストール
    - name: Install Bundled Gems
      run: |
        bundle config path vendor/bundle
        bundle install --jobs 4 --retry 3

    # プロジェクトファイルの生成
    - name: Generate Xcode project with XcodeGen
      run: mint run xcodegen xcodegen generate

    # CocoaPodsで管理しているライブラリのキャッシュ
    - name: Cache Pods
      uses: actions/cache@v2
      with:
        path: Pods
        key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-pods-

    # CocoaPodsで管理しているライブラリのインストール
    - name: Install Pods
      run: bundle exec pod install

    # ビルド
    - name: Xcode build
      run: set -o pipefail &&
        xcodebuild
        -sdk iphonesimulator
        -configuration Debug
        -workspace 1weekPDCA.xcworkspace
        -scheme 1weekPDCA
        build
        | bundle exec xcpretty

    # 単体テストの実行
    - name: Xcode test
      run: set -o pipefail &&
        xcodebuild
        -sdk iphonesimulator
        -configuration Debug
        -workspace 1weekPDCA.xcworkspace
        -scheme 1weekPDCA_UnitTests
        -destination 'platform=iOS Simulator,name=iPhone 14 Pro'
        clean test
        | bundle exec xcpretty --report html

    # コードカバレッジの出力
    - name: Convert Code coverage to HTML
      run: bundle exec slather coverage --html --output-directory html_report

    # テスト結果のアップロード
    - uses: actions/upload-artifact@v2
      with:
        name: test-results
        path: build/reports

    # コードカバレッジのアップロード
    - uses: actions/upload-artifact@v2
      with:
        name: test-coverage
        path: html_report
